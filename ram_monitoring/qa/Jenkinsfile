pipeline{
    agent any
     environment {
	REPO_URL	= 'https://github.com/natraj-thammishetti'
	GIT_BRANCH 	= 'main'
	GIT_REPO 	= 'MyRepository'
	CONF_PATH 	= '/tmp/MyRepository/ram_monitoring/qa'
	SCRIPTS_PATH 	= '/tmp/MyRepository/ram_monitoring/scripts'
     }
     stages{
	stage('prerequisite'){
	    steps{
		sh '''
		rm -rf /tmp/${GIT_REPO}
		git clone -b ${GIT_BRANCH} ${REPO_URL}/${GIT_REPO} /tmp/${GIT_REPO}
		'''
		withCredentials([file(credentialsId: 'aws_pem_file', variable: 'aws_pem_file')]) {
                sh '''
                cp ${aws_pem_file} /tmp/${GIT_REPO}/
		cat /tmp/MyRepository/ec2_key.pem
                '''
                }
	    }		    
	}
	 stage('ram-usage-monitoring'){
	    steps{
		sh """
		python3 ${SCRIPTS_PATH}/memory_usage.py ${CONF_PATH}/variables.json > debug.log
		grep "WARNING" debug.log > warning.log || true
		grep "CRITICAL" debug.log > critical.log || true
		python3 ${SCRIPTS_PATH}/mail.py ${CONF_PATH}/variables.json
		"""
	    }
     	}
     }

post {
	always {
            echo 'This will always run'
	    archiveArtifacts artifacts: "*.log"
        }
        success {
            echo 'This will run only if successful'
            sh '''
    	    rm -rf *.log
	    rm -rf /tmp/$GIT_REPO
	    '''  
	}
        failure {
            echo 'This will run only if failed'
	    sh '''
    	    rm -rf *.log
	    rm -rf /tmp/$GIT_REPO
	    '''
            emailext attachLog: true, attachmentsPattern: "*.log", body: 'The attached are the log files from ARCH Automated Build for EC2 Instance Count is failed', subject: 'ARCH QA EC2 Memory size check pipeline **Failed**', to: 'natrajthammishetti@gmail.com'
        }
    }
}
